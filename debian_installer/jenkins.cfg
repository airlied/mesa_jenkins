# Set country and locale
d-i debian-installer/locale string en_US

# keyboard selection
d-i console-keymaps-at/keymap select us
d-i keyboard-configuration/xkb-keymap select us

# Set the host and domain name
#d-i netcfg/get_hostname string otc-gfxtest-snbgt1-01
d-i netcfg/get_domain string jf.intel.com

# Try to use any network that works
d-i netcfg/choose_interface select auto

# Don't prompt for non-free firmware.
# In nearly every case non-free firmware is only needed by wireless adaptors
# that we don't plan to use
d-i hw-detect/load_firmware boolean false

# Use the internal intel mirror for install and install sid
d-i mirror/protocol http
d-i mirror/country string manual
d-i mirror/http/hostname string linux-ftp.jf.intel.com
d-i mirror/http/directory string /pub/mirrors/debian
d-i mirror/http/proxy string

# Enable 32 bit by default
d-i apt-setup/multiarch string i386

# disable updates that dont apply to unstable
d-i apt-setup/services-select multiselect

# Add a jenkins user using the same password as root,
# This user needs to be part of the video group
d-i passwd/user-fullname string jenkins
d-i passwd/username string jenkins
d-i passwd/user-password-crypted password $1$zB4MA3n2$.jP0rGnBao1XG3m.7BV6X1
d-i passwd/user-default-groups string video

# Set the root password as a crypted md5sum
d-i passwd/root-password-crypted passwd $1$zB4MA3n2$.jP0rGnBao1XG3m.7BV6X1

# Set timezone and clock
d-i clock-setup/utc boolean true
d-i time/zone string US/Pacific
d-i clock-setup/ntp boolean true
d-i clock-setup/ntp-server string 10.7.196.55

# Ensure that an efi partiion from sda is not mounted.
# If this command doesn't succeed it doesn't matter, just go on.
d-i partman/early_command string umount /media || true

# Configure hard disks
d-i partman-auto/disk string /dev/sda
# No lvm or md
d-i partman-auto/method string regular
# force removal of lvm and md devices
d-i partman-lvm/device_remove_lvm boolean true
d-i partman-md/devices_remove_md boolean true

# Write everything without asking
d-i partman-partitioning/confirm_write_new_label boolean true
d-i partman/choose_partition select finish
d-i partman/confirm boolean true
d-i partman/confirm_nooverwrite boolean true

# Use a single partition (or two if using UEFI)
d-i partman-auto/choose_recipe select atomic

# Use UUID's to mount drives
d-i partman/mount_style select uuid

# Don't tell debian what we're installing
popularity-contest popularity-contest/participate boolean false

# Configure tasks to install
tasksel tasksel/first multiselect standard, ssh-server

# Do upgrades
d-i pkgsel/upgrade select full-upgrade
d-i pkgsel/update-policy select none

# Install grub automatically to sda
d-i grub-installer/only_debian boolean true
d-i grub-installer/bootdev string /dev/sda

# Install additional packages, definately need some more things here.
d-i pkgsel/include string \
    sudo \
    systemd \
    build-essential \
    python-simplejson \
    python-lxml \
    python-mako \
    python-numpy \
    gcc-multilib \
    g++-multilib \
    openjdk-7-jre \
    tsocks \
    git \
    libtool \
    autoconf \
    ccache \
    bison \
    flex \
    llvm \
    cmake \
    pkg-config \
    python-git \
    quilt \
    docbook-website \
    vim-nox \
    avahi-daemon \
    libdrm2 libdrm2:i386 \
    emacs \
    freeglut3 freeglut3:i386 \
    gcc-4.9-base gcc-4.9-base:i386 \
    libc6 libc6:i386 \
    libc6-dev libc6-dev:i386 \
    libcaca0 libcaca0:i386 \
    libegl1-mesa libegl1-mesa:i386 \
    libegl1-mesa-dev \
    libelf-dev libelf-dev:i386 \
    libexpat1-dev libexpat1-dev:i386 \
    libffi-dev libffi-dev:i386 \
    libffi6 libffi6:i386 \
    libffi-dev \
    libgbm1 libgbm1:i386 \
    libgbm-dev \
    libgcc1 libgcc1:i386 \
    libgl1-mesa-dev \
    libgl1-mesa-dri libgl1-mesa-dri:i386 \
    libgl1-mesa-glx libgl1-mesa-glx:i386 \
    libegl1-mesa libegl1-mesa:i386 \
    libegl1-mesa-drivers libegl1-mesa-drivers:i386 \
    libglapi-mesa \
    libglu1-mesa libglu1-mesa:i386 \
    libglu1-mesa-dev \
    libllvm3.4 libllvm3.4:i386 \
    libpciaccess-dev libpciaccess-dev:i386 \
    libpciaccess0 libpciaccess0:i386 \
    libpng12-dev \
    libpthread-stubs0-dev \
    libtinfo-dev libtinfo-dev:i386 \
    libudev-dev libudev-dev:i386 \
    libvdpau-dev libvdpau-dev:i386 \
    libx11-dev libx11-dev:i386 \
    libx11-xcb-dev libx11-xcb-dev:i386 \
    libxcb-dri2-0-dev libxcb-dri2-0-dev:i386 \
    libxcb-dri3-dev libxcb-dri3-dev:i386 \
    libxcb-glx0-dev libxcb-glx0-dev:i386 \
    libxcb-present-dev libxcb-present-dev:i386 \
    libxcb-randr0-dev libxcb-randr0-dev:i386 \
    libxcb-sync-dev libxcb-sync-dev:i386 \
    libxcb-xfixes0-dev libxcb-xfixes0-dev:i386 \
    libxdamage-dev libxdamage-dev:i386 \
    libxext-dev libxext-dev:i386 \
    libxfixes-dev libxfixes-dev:i386 \
    libxrender1 libxrender1:i386 \
    libxshmfence-dev libxshmfence-dev:i386 \
    libxxf86vm-dev libxxf86vm-dev:i386 \
    linux-libc-dev linux-libc-dev:i386 \
    libssl-dev libssl-dev:i386 \
    scons \
    x11proto-dri2-dev \
    x11proto-dri3-dev \
    x11proto-gl-dev \
    x11proto-present-dev \
    xutils-dev \
    valgrind \
    salt-minion

d-i preseed/late_command string \
    cp /cdrom/finalize.sh /target/finalize.sh; in-target ./finalize.sh

# poweroff the machine when finished
d-i finish-install/reboot_in_progress note
d-i debian-installer/exit/poweroff boolean true
